// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: media_downloader.proto

package media_downloader

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaUri      string                 `protobuf:"bytes,1,opt,name=media_uri,json=mediaUri,proto3" json:"media_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestMediaRequest) Reset() {
	*x = RequestMediaRequest{}
	mi := &file_media_downloader_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMediaRequest) ProtoMessage() {}

func (x *RequestMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_downloader_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMediaRequest.ProtoReflect.Descriptor instead.
func (*RequestMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_downloader_proto_rawDescGZIP(), []int{0}
}

func (x *RequestMediaRequest) GetMediaUri() string {
	if x != nil {
		return x.MediaUri
	}
	return ""
}

type RequestMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaPath     string                 `protobuf:"bytes,1,opt,name=media_path,json=mediaPath,proto3" json:"media_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestMediaResponse) Reset() {
	*x = RequestMediaResponse{}
	mi := &file_media_downloader_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMediaResponse) ProtoMessage() {}

func (x *RequestMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_downloader_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMediaResponse.ProtoReflect.Descriptor instead.
func (*RequestMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_downloader_proto_rawDescGZIP(), []int{1}
}

func (x *RequestMediaResponse) GetMediaPath() string {
	if x != nil {
		return x.MediaPath
	}
	return ""
}

type ReleaseMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaUri      string                 `protobuf:"bytes,1,opt,name=media_uri,json=mediaUri,proto3" json:"media_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseMediaRequest) Reset() {
	*x = ReleaseMediaRequest{}
	mi := &file_media_downloader_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseMediaRequest) ProtoMessage() {}

func (x *ReleaseMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_downloader_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseMediaRequest.ProtoReflect.Descriptor instead.
func (*ReleaseMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_downloader_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseMediaRequest) GetMediaUri() string {
	if x != nil {
		return x.MediaUri
	}
	return ""
}

type ReleaseMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseMediaResponse) Reset() {
	*x = ReleaseMediaResponse{}
	mi := &file_media_downloader_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseMediaResponse) ProtoMessage() {}

func (x *ReleaseMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_downloader_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseMediaResponse.ProtoReflect.Descriptor instead.
func (*ReleaseMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_downloader_proto_rawDescGZIP(), []int{3}
}

var File_media_downloader_proto protoreflect.FileDescriptor

const file_media_downloader_proto_rawDesc = "" +
	"\n" +
	"\x16media_downloader.proto\"2\n" +
	"\x13RequestMediaRequest\x12\x1b\n" +
	"\tmedia_uri\x18\x01 \x01(\tR\bmediaUri\"5\n" +
	"\x14RequestMediaResponse\x12\x1d\n" +
	"\n" +
	"media_path\x18\x01 \x01(\tR\tmediaPath\"2\n" +
	"\x13ReleaseMediaRequest\x12\x1b\n" +
	"\tmedia_uri\x18\x01 \x01(\tR\bmediaUri\"\x16\n" +
	"\x14ReleaseMediaResponse2\x8f\x01\n" +
	"\x0fMediaDownloader\x12=\n" +
	"\fRequestMedia\x12\x14.RequestMediaRequest\x1a\x15.RequestMediaResponse\"\x00\x12=\n" +
	"\fReleaseMedia\x12\x14.ReleaseMediaRequest\x1a\x15.ReleaseMediaResponse\"\x00B\x19Z\x17gen/go/media_downloaderb\x06proto3"

var (
	file_media_downloader_proto_rawDescOnce sync.Once
	file_media_downloader_proto_rawDescData []byte
)

func file_media_downloader_proto_rawDescGZIP() []byte {
	file_media_downloader_proto_rawDescOnce.Do(func() {
		file_media_downloader_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_media_downloader_proto_rawDesc), len(file_media_downloader_proto_rawDesc)))
	})
	return file_media_downloader_proto_rawDescData
}

var file_media_downloader_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_media_downloader_proto_goTypes = []any{
	(*RequestMediaRequest)(nil),  // 0: RequestMediaRequest
	(*RequestMediaResponse)(nil), // 1: RequestMediaResponse
	(*ReleaseMediaRequest)(nil),  // 2: ReleaseMediaRequest
	(*ReleaseMediaResponse)(nil), // 3: ReleaseMediaResponse
}
var file_media_downloader_proto_depIdxs = []int32{
	0, // 0: MediaDownloader.RequestMedia:input_type -> RequestMediaRequest
	2, // 1: MediaDownloader.ReleaseMedia:input_type -> ReleaseMediaRequest
	1, // 2: MediaDownloader.RequestMedia:output_type -> RequestMediaResponse
	3, // 3: MediaDownloader.ReleaseMedia:output_type -> ReleaseMediaResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_media_downloader_proto_init() }
func file_media_downloader_proto_init() {
	if File_media_downloader_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_media_downloader_proto_rawDesc), len(file_media_downloader_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_downloader_proto_goTypes,
		DependencyIndexes: file_media_downloader_proto_depIdxs,
		MessageInfos:      file_media_downloader_proto_msgTypes,
	}.Build()
	File_media_downloader_proto = out.File
	file_media_downloader_proto_goTypes = nil
	file_media_downloader_proto_depIdxs = nil
}
